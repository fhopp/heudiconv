# Generated by Neurodocker version 0.4.3-2-g01cdd22
# Timestamp: 2019-01-10 05:36:51 UTC
#
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
#
#     https://github.com/kaczmarj/neurodocker

FROM neurodebian:stretch

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
           tree \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

ENV PATH="/opt/dcm2niix-v1.0.20181125/bin:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           cmake \
           g++ \
           gcc \
           git \
           make \
           pigz \
           zlib1g-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && git clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix \
    && cd /tmp/dcm2niix \
    && git fetch --tags \
    && git checkout v1.0.20181125 \
    && mkdir /tmp/dcm2niix/build \
    && cd /tmp/dcm2niix/build \
    && cmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-v1.0.20181125 .. \
    && make \
    && make install \
    && rm -rf /tmp/dcm2niix

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           git \
           gcc \
           pigz \
           liblzma-dev \
           libc-dev \
           git-annex-standalone \
           netbase \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY [".", "/src/heudiconv"]

ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"
RUN export PATH="/opt/miniconda-latest/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && sync && conda clean -tipsy && sync \
    && conda install -y -q --name base \
           'python=3.6' \
           'traits>=4.6.0' \
           'scipy' \
           'numpy' \
           'nomkl' \
           'pandas' \
    && sync && conda clean -tipsy && sync \
    && bash -c "source activate base \
    &&   pip install --no-cache-dir --editable \
             '/src/heudiconv[all]'" \
    && rm -rf ~/.cache/pip/* \
    && sync

# download example data
WORKDIR /examples

RUN datalad install http://datasets.datalad.org/dicoms/dartmouth-phantoms/PHANTOM1_3 && \
    datalad install http://datasets.datalad.org/dicoms/dartmouth-phantoms/bids_test4-20161014/phantom-1 && \
    rm -rf phantom-1/dwi* phantom-1/fmap* phantom-1/MoCo* && \
    datalad get -J4 PHANTOM1_3 && \
    datalad get -J4 phantom-1

RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
RUN apt-get install -y nodejs vim

RUN npm install -g bids-validator@1.1.0

COPY ["heudiconv/heuristics/convertall.py", "/examples/myheuristic.py"]

ENTRYPOINT ["heudiconv"]

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "neurodebian:stretch" \
    \n    ], \
    \n    [ \
    \n      "dcm2niix", \
    \n      { \
    \n        "version": "v1.0.20181125", \
    \n        "method": "source" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "git", \
    \n        "gcc", \
    \n        "pigz", \
    \n        "liblzma-dev", \
    \n        "libc-dev", \
    \n        "git-annex-standalone", \
    \n        "netbase" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        ".", \
    \n        "/src/heudiconv" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "miniconda", \
    \n      { \
    \n        "use_env": "base", \
    \n        "conda_install": [ \
    \n          "python=3.6", \
    \n          "traits>=4.6.0", \
    \n          "scipy", \
    \n          "numpy", \
    \n          "nomkl", \
    \n          "pandas" \
    \n        ], \
    \n        "pip_install": [ \
    \n          "/src/heudiconv[all]" \
    \n        ], \
    \n        "pip_opts": "--editable" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "entrypoint", \
    \n      "heudiconv" \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json
